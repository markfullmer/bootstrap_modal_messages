<?php

/**
 * @file
 * Main functions for bootstrap_modal_messages module.
 */

define('BOOTSTRAP_MODAL_MESSAGES_HEADER', '<h4 class="modal-title">' . t('Messages') . '</h4>');
define('BOOTSTRAP_MODAL_MESSAGES_FOOTER', '<button type="button" class="btn btn-default" data-dismiss="modal">Close</button>');

/**
 * Implements hook_menu().
 */
function bootstrap_modal_messages_menu() {
  $items = array();

  $items['admin/config/user-interface/bootstrap_modal_messages'] = array(
    'title' => 'Bootstrap Modal Messages',
    'description' => 'Settings for Bootstrap Modal Messages module',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('bootstrap_modal_messages_admin_form'),
    'access arguments' => array('administer bootstrap modal messages'),
  );

  return $items;
}

/**
 * Implements hook_permission().
 */
function bootstrap_modal_messages_permission() {
  return array(
    'administer bootstrap modal messages' => array(
      'title' => t('Administer Bootstrap Modal Messages'),
      'description' => t('Configure settings for Bootstrap Modal Messages module.'),
    ),
    'view bootstrap modal messages controls' => array(
      'title' => t('View Bootstrap Modal Messages controls'),
      'description' => t('This is non-administrative.  This is the button to re-show modals.'),
    ),
  );
}

/**
 * Implements hook_help().
 */
function bootstrap_modal_messages_help($path, $arg) {
  switch ($path) {
    // On the help overview page.
    case 'admin/help#bootstrap_modal_messages':
      // @FIXME
// url() expects a route name or an external URI.
// return '<p>' . t('Transform Drupal messages into Bootstrap Modals. The <a href="@admin">administration page</a> provides settings to a few options.', array('@admin' => url('admin/config/user-interface/bootstrap_modal_messages'))) . '</p>';


    // On the admin settings page.
    case 'admin/config/user-interface/bootstrap_modal_messages':
      return '<p>' . t('This page provides configuration options for bootstrap_modal_messages.module. You can configure how multiple messages are grouped.') . '</p>';
  }
}

/**
 * Admin settings form.
 */
function bootstrap_modal_messages_admin_form($form, &$form_state) {
  // @todo Option to use with any sourced BS library.
  $form['bootstrap_modal_messages_selector'] = array(
    '#type' => 'textfield',
    '#title' => t('Messages div selector'),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_selector'),
    '#description' => t('The CSS/JS selector to find messages for the modal.'),
  );

  $form['bootstrap_modal_messages_multiple'] = array(
    '#type' => 'select',
    '#title' => t('Multiple messages setting'),
    '#options' => array(
      'single' => t('Single modal'),
      'multiple' => t('Multiple - New modal per message type'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_multiple'),
    '#description' => t('How to handle multiple messages on one page?'),
  );

  $form['bootstrap_modal_messages_ignore_admin'] = array(
    '#type' => 'select',
    '#title' => t('Ignore admin pages'),
    '#options' => array(
      1 => t('Yes'),
      0 => t('No'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_ignore_admin'),
    '#description' => t('Ignore admin pages so that messages display normally?'),
  );

  // Modal header.
  $form['modal_header'] = array(
    '#type' => 'fieldset',
    '#title' => t('Modal Header'),
    '#collapsible' => TRUE,
  );

  $form['modal_header']['bootstrap_modal_messages_show_header'] = array(
    '#type' => 'select',
    '#title' => t('Show header'),
    '#options' => array(
      1 => t('Yes'),
      0 => t('No'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_header'),
    '#description' => t('Show the modal header.'),
  );

  // @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
$form['modal_header']['bootstrap_modal_messages_title'] = array(
    '#type' => 'textarea',
    '#title' => t('Modal Title'),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_title'),
    '#description' => t('Enter the HTML to be used in the modal title. Defaults to Bootstrap\'s default h4 title.'),
  );

  $form['modal_header']['bootstrap_modal_messages_header_close'] = array(
    '#type' => 'select',
    '#title' => t('Show close button (X)'),
    '#options' => array(
      1 => t('Yes'),
      0 => t('No'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_header_close'),
    '#description' => t('Show the close (X) button in modal header.'),
  );

  // Modal footer.
  $form['modal_footer'] = array(
    '#type' => 'fieldset',
    '#title' => t('Modal Footer'),
    '#collapsible' => TRUE,
  );

  $form['modal_footer']['bootstrap_modal_messages_show_footer'] = array(
    '#type' => 'select',
    '#title' => t('Show footer'),
    '#options' => array(
      1 => t('Yes'),
      0 => t('No'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_footer'),
    '#description' => t('Show the modal footer.'),
  );

  // @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
$form['modal_footer']['bootstrap_modal_messages_footer_html'] = array(
    '#type' => 'textarea',
    '#title' => t('Footer HTML'),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_footer_html'),
    '#description' => t('Enter the HTML to be used in the modal footer. Defaults to Bootstrap\'s default Close button.'),
  );

  // Modal controls.
  $form['controls'] = array(
    '#type' => 'fieldset',
    '#title' => t('Controls'),
    '#collapsible' => TRUE,
  );

  $form['controls']['bootstrap_modal_messages_show_onload'] = array(
    '#type' => 'select',
    '#title' => t('Open modal on page load?'),
    '#options' => array(
      1 => t('Yes'),
      0 => t('No - Should enable "Show controls" to display modal'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_onload'),
    '#description' => t('Open modal immediately when the page loads.'),
  );

  $form['controls']['bootstrap_modal_messages_show_controls'] = array(
    '#type' => 'select',
    '#title' => t('Show controls?'),
    '#options' => array(
      0 => t('No'),
      1 => t('Yes'),
    ),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_controls'),
    '#description' => t('Creates a div that allows you to show messages again. !note', array('!note' => '<strong>This setting can be overridden by the permission "View Bootstrap Modal Messages controls".</strong>')),
  );

  // @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
$form['controls']['bootstrap_modal_messages_controls_html'] = array(
    '#type' => 'textarea',
    '#title' => t('Controls HTML'),
    '#default_value' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_controls_html'),
    '#description' => t('Enter the HTML to be used in the div for controls.'),
  );

  return system_settings_form($form);
}

/**
 * Implements hook_page_build().
 */
function bootstrap_modal_messages_page_build(&$page) {
  $ignore_admin = \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_ignore_admin');
  if ($ignore_admin && path_is_admin(\Drupal\Core\Url::fromRoute("<current>")->toString())) {
    return;
  }
  $path = drupal_get_path('module', 'bootstrap_modal_messages');
  // Array of settings passed to JS.
  // @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
// @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
// @FIXME
// Could not extract the default value because it is either indeterminate, or
// not scalar. You'll need to provide a default value in
// config/install/bootstrap_modal_messages.settings.yml and config/schema/bootstrap_modal_messages.schema.yml.
$js_settings = array(
    'selector' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_selector'),
    'show_header' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_header'),
    'title' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_title'),
    'header_close' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_header_close'),
    'show_footer' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_footer'),
    'footer_html' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_footer_html'),
    'multiple' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_multiple'),
    'show_onload' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_onload'),
    'show_controls' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_show_controls'),
    'controls_html' => \Drupal::config('bootstrap_modal_messages.settings')->get('bootstrap_modal_messages_controls_html'),
  );
  // Override setting with permission.
  if (!\Drupal::currentUser()->hasPermission('view bootstrap modal messages controls')) {
    $js_settings['show_controls'] = 0;
  }
  // Add CSS only if the controls are present.
  if ($js_settings['show_controls']) {
    // @FIXME
// The Assets API has totally changed. CSS, JavaScript, and libraries are now
// attached directly to render arrays using the #attached property.
// 
// 
// @see https://www.drupal.org/node/2169605
// @see https://www.drupal.org/node/2408597
// drupal_add_css($path . '/css/bootstrap_modal_messages.css');

  }
  // Add JS file & settings.
  // @FIXME
// The Assets API has totally changed. CSS, JavaScript, and libraries are now
// attached directly to render arrays using the #attached property.
// 
// 
// @see https://www.drupal.org/node/2169605
// @see https://www.drupal.org/node/2408597
// drupal_add_js($path . '/js/bootstrap_modal_messages.js');

  // @FIXME
// The Assets API has totally changed. CSS, JavaScript, and libraries are now
// attached directly to render arrays using the #attached property.
// 
// 
// @see https://www.drupal.org/node/2169605
// @see https://www.drupal.org/node/2408597
// drupal_add_js(array('bootstrap_modal_messages' => $js_settings), 'setting');

}
